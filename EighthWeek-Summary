第八周算法小结
    本周的题目难度不太大，思路清晰，主要在实战
    图论：
        再探图的存储： 邻接矩阵int[][] < 出边数组 ArrayList<List<Integer>> < 邻接表 Node{ Node, int }
        再探图的搜索：dfs + visited 或 bfs + queue
        最短路：
            1) Bellman-Ford算法：O(mn)，暴力遍历，多次循环，直到不能更新为止
            2) Dijkstra算法：O(mlogn)，空间换时间。存取图，建立堆，取代暴力遍历并进行有针对性的循环。
            // 743 Medium 网络延迟时间 network-delay-time
            https://leetcode-cn.com/problems/network-delay-time/
            // AcWing Dijkstra算法实战
            https://www.acwing.com/problem/content/852/
        每一对点的最短路：
            Floyd算法：O(n3)，基于dp，并可优化
            // 1334 Medium 阈值距离内邻居最少的城市 find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance
            https://leetcode-cn.com/problems/find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance/
        最小生成树：
            Kruskal算法：O(mlongm)，建立并查集，堆，针对性扫描
            // 1584 Medium 连接所有点的最小费用 min-cost-to-connect-all-points
            https://leetcode-cn.com/problems/min-cost-to-connect-all-points/
    字符串：
        字符串题目很活，搭配各个数据结构有不错的效果。
        两个算法：
            Rabin-Karp哈希算法：可选择预处理 或 边滑动边处理。具体查看Sixteenth-Lesson中的小结
                // 28 Easy 实现strStr() implement-strstr
                https://leetcode-cn.com/problems/implement-strstr/
                // 686 Medium 重复叠加字符串匹配 repeated-string-match
                https://leetcode-cn.com/problems/repeated-string-match/
            KMP算法：仍不熟！！！等多了解了解再回来补充
                // 28 Easy 实现strStr() implement-strstr
                https://leetcode-cn.com/problems/implement-strstr/
            前缀类题目： 字典树 / 分治 / 二分
                // 14 Easy 最长公共前缀 longest-common-prefix
                https://leetcode-cn.com/problems/longest-common-prefix/description/
            翻转类题目： 双指针 / 栈 / StringBuilder
                // 557 Easy 反转字符串中的单词Ⅲ reverse-words-in-a-string-iii
                https://leetcode-cn.com/problems/reverse-words-in-a-string-iii/
                // 917 Easy 仅仅反转字母 reverse-only-letters
                https://leetcode-cn.com/problems/reverse-only-letters/
                // 541 Easy 反转字符串Ⅱ reverse-string-ii
                https://leetcode-cn.com/problems/reverse-string-ii/
            回文串： 双指针
                // 125 Easy 验证回文串 valid-palindrome
                https://leetcode-cn.com/problems/valid-palindrome/
                // 680 Easy 验证回文字符串Ⅱ valid-palindrome-ii
                https://leetcode-cn.com/problems/valid-palindrome-ii/
                // 5 Medium 最长回文字串 longest-palindromic-substring
                // Rabin-Karp + 二分
                https://leetcode-cn.com/problems/longest-palindromic-substring/
            异位词： sort() + equals() / int[]记录出现的字母次数 + 滑动窗
                // 49 Medium 字母异位词分组 group-anagrams
                https://leetcode-cn.com/problems/group-anagrams/
                // 438 Medium 找到字符串中所有字母异位词 find-all-anagrams-in-a-string
                https://leetcode-cn.com/problems/find-all-anagrams-in-a-string/
            字符串dp： dp[i][j] 表示s的（前，后）i个字符 与 t的（前， 后）j个字符匹配
                // 10 Hard 正则表达式 regular-expression-matching
                https://leetcode-cn.com/problems/regular-expression-matching/
                // 44 Hard 不同的子序列 wildcard-matching
                https://leetcode-cn.com/problems/wildcard-matching/
                // 115 Hard 不同的子序列 distinct-subsequences
                // 画表
                https://leetcode-cn.com/problems/distinct-subsequences/
            
