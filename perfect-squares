class Solution {
    // 279 Medium 完全平方数 perfect-squares
    // 先遍历物品，再遍历体积 34ms 37.1MB
    public int numSquares(int n) {
        // 完全背包
        int maxnum = new Double(Math.sqrt(n)).intValue() + 1;
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0;
        // 先遍历物品，再遍历体积
        for (int num = 1; num <= maxnum; num++) {
            int cur = num * num;
            for (int i = 1; i <= n; i++)  {
                if (i >= cur)
                    dp[i] = Math.min(dp[i], dp[i - cur] + 1);
            }
        }
        return dp[n];
    }
    
    // 先遍历体积，再遍历物品 47ms 37.4MB
    public int numSquares(int n) {
        // 完全背包
        int maxnum = new Double(Math.sqrt(n)).intValue() + 1;
        int[] dp = new int[n + 1];
        Arrays.fill(dp, Integer.MAX_VALUE);
        dp[0] = 0;
        // 先遍历体积，再遍历物品
        for (int i = 1; i <= n; i++)  {
            for (int num = 1; num <= maxnum; num++) {
                int cur = num * num;
                if (i >= cur)
                    dp[i] = Math.min(dp[i], dp[i - cur] + 1);
            }
        }
        return dp[n];
    }
}
