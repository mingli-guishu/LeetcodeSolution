class Trie {
    // 208 Medium 实现字典树(前缀树) implement-trie-prefix-tree
    Node root;
    /** Initialize your data structure here. */
    public Trie() {
        root = new Node();
    }
    
    /** Inserts a word into the trie. */
    public void insert(String word) {
        Node cur = root;
        for (char c : word.toCharArray()) {
            if (!cur.child.containsKey(c))
                cur.child.put(c, new Node());
            cur = cur.child.get(c);
        }
        cur.count++;
    }
    
    /** Returns if the word is in the trie. */
    public boolean search(String word) {
        Node cur = root;
        for (char c : word.toCharArray()) {
            if (!cur.child.containsKey(c))
                return false;
            cur = cur.child.get(c);
        }
        return cur.count > 0;
    }
    
    /** Returns if there is any word in the trie that starts with the given prefix. */
    public boolean startsWith(String prefix) {
        Node cur = root;        
        for (char c : prefix.toCharArray()) {
            if (!cur.child.containsKey(c))
                return false;
            cur = cur.child.get(c);
        }
        return true;
    }

    private class Node {
        int count;
        HashMap<Character, Node> child;
        public Node() {
            this.count = 0;
            this.child = new HashMap<>();
        }
    }
}
