class Solution {
    // 918 Medium 环形数组的最大和 maximum-sum-circular-subarray
    public int maxSubarraySumCircular(int[] nums) {
        // 单调队列
        int ans = nums[0];
        int len = nums.length;
        int[] sum = new int[len * 2 + 1];
        for (int i = 1; i <= len; i++)
            sum[i + len] = sum[i] = nums[i - 1];
        for (int i = 1; i < 2 * len + 1; i++)// 前缀和
            sum[i] += sum[i - 1];
        Deque<Integer> q = new ArrayDeque<>();// 单调递增，长度为n的队列，存下标
        for (int i = 0; i < 2 * len + 1; i++) {
            // 合法性
            while (!q.isEmpty() && i - q.peekFirst() > len)
                q.pollFirst();
            // getans
            if (!q.isEmpty())
                ans = Math.max(ans, sum[i] - sum[q.peekFirst()]);
            // add
            while (!q.isEmpty() && sum[q.peekLast()] >= sum[i])
                q.pollLast();
            q.offerLast(i);
        }
        return ans;
    }
}
