class Solution {
    // 34 Medium 在排序数组中查找元素的第一个位置和最后一个位置 find-first-and-last-position-of-element-in-sorted-array
    public int[] searchRange(int[] nums, int target) {
        if (nums.length == 0)
            return new int[] {-1, -1};
        int[] ans = new int[2];
        // 找第一个<=target和第一个>=target的数
        // lower_bound，第一个大于等于
        int l = 0, r = nums.length;
        while (l < r) {
            int mid = (l + r) >> 1;
            if (nums[mid] >= target)
                r = mid;
            else
                l = mid + 1; 
        }
        ans[0] = r;
        // upper_bound，最后一个小于等于
        l = -1;
        r = nums.length - 1;
        while (l < r) {
            int mid = (l + r + 1) >> 1;
            if (nums[mid] <= target)
                l = mid;
            else
                r = mid - 1;
        }
        ans[1] = r;
        // 倘若第一个>=的位置在最后一个<=的右边，那么就不存在target
        if (ans[0] > ans[1]) {
            ans[0] = -1;
            ans[1] = -1;
        }
        return ans;
    }
}
