class Solution {
    // 1334 Medium 阈值距离内邻居最少的城市 find-the-city-with-the-smallest-number-of-neighbors-at-a-threshold-distance
    public int findTheCity(int n, int[][] edges, int distanceThreshold) {
        // 邻接矩阵作为Floyd算法的初始态
        int[][] d = new int[n][n];
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++)
                d[i][j] = (int)1e9;
            d[i][i] = 0;
        }
        for (int[] edge : edges) {
            int x = edge[0], y = edge[1], z = edge[2];
            d[x][y] = z;
            d[y][x] = z;
        }
        // Floyd算法
        for (int k = 0; k < n; k++)
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)    
                    // 是否要经过k
                    d[i][j] = Math.min(d[i][j], d[i][k] + d[k][j]);
        // 找城市
        int maxCount = (int)1e9; // 当前threshold内连接城市最多的城市
        int ans = -1; // maxCount对应的城市
        for (int i = 0; i < n; i++) {
            int count = 0; // 当前城市i在threshold内所能连接的城市数
            for (int j = 0; j < n; j++) {
                if (i == j) continue;
                if (d[i][j] <= distanceThreshold)
                    count++;
            }
            if (count <= maxCount) {
                maxCount = count;
                ans = i;
            }
        }
        return ans;
    }
}
