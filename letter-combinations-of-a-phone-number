class Solution {
    // 17 Medium 电话号码的字母组合 letter-combinations-of-a-phone-number
    List<String> ans;
    StringBuilder builder;
    public List<String> letterCombinations(String digits) {
        ans = new ArrayList<String>();
        if (digits.length() == 0)
            return ans;
        builder = new StringBuilder();
        dfs(digits, 0);
        return ans;
    }

    private void dfs(String digits, int po) {
        // 终止条件
        if (po == digits.length()) {
            ans.add(builder.toString());
            return;
        }
        String nums = containsAlpha(digits.charAt(po));
        for (int i = 0; i < nums.length(); i++) {
            builder.append(nums.charAt(i));
            dfs(digits, po + 1);
            // 还原
            builder.deleteCharAt(po);
        }
    }

    private String containsAlpha(char m) {
        switch(m) {
            case '2':
                return "abc";
            case '3':
                return "def";
            case '4':
                return "ghi";
            case '5':
                return "jkl";
            case '6':
                return "mno";
            case '7': 
                return "pqrs";
            case '8':
                return "tuv";
            case '9':
                return "wxyz";
            default:
                return "";
        }
    }
}
