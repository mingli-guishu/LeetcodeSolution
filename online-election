class TopVotedCandidate {
    // 911 Medium 在线选举 online-election
    List<Leader> winner_time;// 领先者的时间戳
    public TopVotedCandidate(int[] persons, int[] times) {
        winner_time = new ArrayList<>();
        HashMap<Integer, Integer> map = new HashMap<>();// 记录当前时刻每个candidate的选票数，并随时间更新
        int leader = -1;// 当前的领先者
        int count = 0;// 当前领先者的票数
        for (int i = 0; i < persons.length; i++) {
            // 给被投票的candidate加票
            int votes = map.getOrDefault(persons[i], 0) + 1;
            map.put(persons[i], votes);
            // 判断领先者是否改变
            if (votes >= count) {
                count = votes;
                if (leader != persons[i]) {
                    leader = persons[i];
                    winner_time.add(new Leader(leader, times[i]));// 领先者改变则记录时间戳
                }
            }
        }
    }
    
    public int q(int t) {
        // 二分法求winner_time时间中第一个<=t的Leader
        // upper_bound
        int l = -1, r = winner_time.size() - 1;
        while (l < r) {
            int mid = (l + r + 1) / 2;
            if (winner_time.get(mid).time <= t)
                l = mid;
            else
                r = mid - 1;
        }
        return winner_time.get(l).person;
    }

    private class Leader{
        int person;
        int time;
        public Leader(int person, int time) {
            this.person = person;
            this.time = time;
        }
    }
}
