class Solution {
    // 236 Medium 二叉树的最近祖先 lowest-common-ancestor-of-a-binary-tree
    HashMap<Integer, TreeNode> map;
    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {
        // map存祖先关系 + set记录溯源图
        map = new HashMap<>();
        HashSet<Integer> set = new HashSet<>();
        familyTree(root);
        // 把从root到p的node放进set
        while (p != null) {
            set.add(p.val);
            p = map.getOrDefault(p.val, null);
        }
        // 沿q到root向上寻找
        while (!set.contains(q.val)) {
            q = map.get(q.val);
        }
        // 如果map存两个int，返回时无法返回node
        return q;
    }

    // 用map建立对应关系
    private void familyTree(TreeNode root) {
        if (root == null)
            return;
        if (root.left != null) {
           map.put(root.left.val, root);
           familyTree(root.left);
        }
        if (root.right != null) {
            map.put(root.right.val, root);
            familyTree(root.right);
        }
    }
}
